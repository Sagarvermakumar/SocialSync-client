import { configureStore } from "@reduxjs/toolkit";
import { authReducer } from "./auth/authReducer";
import { connectSocialAccountReducer } from "./connection/reducer";

export const store = configureStore({
  reducer: {
    auth: authReducer,
    socialAccount: connectSocialAccountReducer,
  },
});

// Step	File	Purpose
// 1Ô∏è‚É£	authActionTypes.js	Defines action type constants
// 2Ô∏è‚É£	authApi.js	Handles API requests (Axios)
// 3Ô∏è‚É£	authActions.js	Defines Redux actions that call APIs
// 4Ô∏è‚É£	authReducer.js	Updates state based on actions
// 5Ô∏è‚É£	store.js	Configures and exports Redux store
// 6Ô∏è‚É£	Login.js	React component that dispatches actions and reads state

// üî• Summary of Redux Flow
// Step	Action	What Happens?
// 1Ô∏è‚É£ UI Interaction	User clicks "Login"	Calls dispatch(loginUser())
// 2Ô∏è‚É£ Action Dispatch	authActions.js	Dispatches LOGIN_USER_REQUEST
// 3Ô∏è‚É£ API Call	authApi.js	Calls backend API for authentication
// 4Ô∏è‚É£ Reducer Updates	authReducer.js	Updates user, loading, isAuthenticated
// 5Ô∏è‚É£ Store Holds State	store.js	Keeps global authentication state
// 6Ô∏è‚É£ UI Re-Renders	React Component	Displays user info or error
